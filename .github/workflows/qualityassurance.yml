# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches:
      - "quality/**"

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build

    - name: before-deploy, build image
      run: |
        docker build -t resell-platform-app .
        docker save resell-platform-app -o resell-platform-app.tar
        mkdir -p deploy
        mv cache deploy/cache
        mv session deploy/session
        mv database deploy/database
        mv docker-compose.yml deploy/docker-compose.yml
        mv docker-compose.test.yml deploy/docker-compose.test.yml
        mv resell-platform-app.tar deploy/resell-platform-app.tar
        chmod +x scripts/deploy.sh
        mv scripts/deploy-qa.sh deploy/deploy.sh
        mv appspec.yml deploy/appspec.yml
        zip -r resell-platform deploy/*

    - name: Upload to S3
      run: |
        aws s3 cp ./resell-platform.zip s3://resell-platform-image-qa

    - name: deploy with AWS codeDeploy
      run: aws deploy create-deployment
        --application-name resell-platform-webservice-qa
        --deployment-config-name CodeDeployDefault.OneAtATime
        --deployment-group-name resell-platform-webservice-qa-group
        --s3-location bucket=resell-platform-image-qa,bundleType=zip,key=resell-platform.zip
